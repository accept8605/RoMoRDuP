//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoMoRDuP.Properties {


    [System.Configuration.SettingsProvider(typeof(RoMoRDuP.CustomSettingsProvider))]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.57")]
        public string Version {
            get {
                return ((string)(this["Version"]));
            }
            set {
                this["Version"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("default")]
        public string MirrorSourceFolder {
            get {
                return ((string)(this["MirrorSourceFolder"]));
            }
            set {
                this["MirrorSourceFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("default")]
        public string MirrorTargetFolder {
            get {
                return ((string)(this["MirrorTargetFolder"]));
            }
            set {
                this["MirrorTargetFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50")]
        public int MirrorProcessMax {
            get {
                return ((int)(this["MirrorProcessMax"]));
            }
            set {
                this["MirrorProcessMax"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public string MirrorProcessMaxType {
            get {
                return ((string)(this["MirrorProcessMaxType"]));
            }
            set {
                this["MirrorProcessMaxType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MirrorFileFilterbIncludeOnly {
            get {
                return ((bool)(this["MirrorFileFilterbIncludeOnly"]));
            }
            set {
                this["MirrorFileFilterbIncludeOnly"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("everything")]
        public string MirrorFileFilterInclude {
            get {
                return ((string)(this["MirrorFileFilterInclude"]));
            }
            set {
                this["MirrorFileFilterInclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*[RoMoRDuP_Ignore]*")]
        public string MirrorFileFilterExclude {
            get {
                return ((string)(this["MirrorFileFilterExclude"]));
            }
            set {
                this["MirrorFileFilterExclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MirrorFileFilterPlaylistbIncludeOnly {
            get {
                return ((bool)(this["MirrorFileFilterPlaylistbIncludeOnly"]));
            }
            set {
                this["MirrorFileFilterPlaylistbIncludeOnly"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*.m3u, *.wpl, *.kpl")]
        public string MirrorFileFilterPlaylistInclude {
            get {
                return ((string)(this["MirrorFileFilterPlaylistInclude"]));
            }
            set {
                this["MirrorFileFilterPlaylistInclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*[RoMoRDuP_Ignore]*")]
        public string MirrorFileFilterPlaylistExclude {
            get {
                return ((string)(this["MirrorFileFilterPlaylistExclude"]));
            }
            set {
                this["MirrorFileFilterPlaylistExclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MirrorbUpdatePlaylists {
            get {
                return ((bool)(this["MirrorbUpdatePlaylists"]));
            }
            set {
                this["MirrorbUpdatePlaylists"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MirrorbUseSameFolderPathsPlaylists {
            get {
                return ((bool)(this["MirrorbUseSameFolderPathsPlaylists"]));
            }
            set {
                this["MirrorbUseSameFolderPathsPlaylists"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("RenameSyncDir")]
        public string MirrorDuplicatesWithDiffFilenames {
            get {
                return ((string)(this["MirrorDuplicatesWithDiffFilenames"]));
            }
            set {
                this["MirrorDuplicatesWithDiffFilenames"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MostRecentDate")]
        public string MirrorUpdatedFiles {
            get {
                return ((string)(this["MirrorUpdatedFiles"]));
            }
            set {
                this["MirrorUpdatedFiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SyncDir")]
        public string MirrorMoveTo {
            get {
                return ((string)(this["MirrorMoveTo"]));
            }
            set {
                this["MirrorMoveTo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SyncDir")]
        public string MirrorMoveChangeFilename {
            get {
                return ((string)(this["MirrorMoveChangeFilename"]));
            }
            set {
                this["MirrorMoveChangeFilename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MirrorbCopyMissingSouceTarget {
            get {
                return ((bool)(this["MirrorbCopyMissingSouceTarget"]));
            }
            set {
                this["MirrorbCopyMissingSouceTarget"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MirrorbCopyMissingTargetSource {
            get {
                return ((bool)(this["MirrorbCopyMissingTargetSource"]));
            }
            set {
                this["MirrorbCopyMissingTargetSource"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MirrorbDeleteTarget {
            get {
                return ((bool)(this["MirrorbDeleteTarget"]));
            }
            set {
                this["MirrorbDeleteTarget"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MirrorbDeleteSource {
            get {
                return ((bool)(this["MirrorbDeleteSource"]));
            }
            set {
                this["MirrorbDeleteSource"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Easy")]
        public string MirrorModeSelectSource {
            get {
                return ((string)(this["MirrorModeSelectSource"]));
            }
            set {
                this["MirrorModeSelectSource"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Easy")]
        public string MirrorModeUserOptions {
            get {
                return ((string)(this["MirrorModeUserOptions"]));
            }
            set {
                this["MirrorModeUserOptions"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SyncOneWayLeave")]
        public string MirrorUserOptionsEasy {
            get {
                return ((string)(this["MirrorUserOptionsEasy"]));
            }
            set {
                this["MirrorUserOptionsEasy"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("default")]
        public string RDSourceFolder {
            get {
                return ((string)(this["RDSourceFolder"]));
            }
            set {
                this["RDSourceFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50")]
        public int RDProcessMax {
            get {
                return ((int)(this["RDProcessMax"]));
            }
            set {
                this["RDProcessMax"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public string RDProcessMaxType {
            get {
                return ((string)(this["RDProcessMaxType"]));
            }
            set {
                this["RDProcessMaxType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool RDFileFilterbIncludeOnly {
            get {
                return ((bool)(this["RDFileFilterbIncludeOnly"]));
            }
            set {
                this["RDFileFilterbIncludeOnly"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("everything")]
        public string RDFileFilterInclude {
            get {
                return ((string)(this["RDFileFilterInclude"]));
            }
            set {
                this["RDFileFilterInclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*[RoMoRDuP_Ignore]*, *.lnk, *.jpg, *.jpeg, *.png, *.bmp, *.gif, *.ico\"")]
        public string RDFileFilterExclude {
            get {
                return ((string)(this["RDFileFilterExclude"]));
            }
            set {
                this["RDFileFilterExclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RDFileFilterPlaylistbIncludeOnly {
            get {
                return ((bool)(this["RDFileFilterPlaylistbIncludeOnly"]));
            }
            set {
                this["RDFileFilterPlaylistbIncludeOnly"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*.m3u, *.wpl, *.kpl")]
        public string RDFileFilterPlaylistInclude {
            get {
                return ((string)(this["RDFileFilterPlaylistInclude"]));
            }
            set {
                this["RDFileFilterPlaylistInclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*[RoMoRDuP_Ignore]*")]
        public string RDFileFilterPlaylistExclude {
            get {
                return ((string)(this["RDFileFilterPlaylistExclude"]));
            }
            set {
                this["RDFileFilterPlaylistExclude"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RDbUpdatePlaylists {
            get {
                return ((bool)(this["RDbUpdatePlaylists"]));
            }
            set {
                this["RDbUpdatePlaylists"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RDbUseSameFolderPathsPlaylists {
            get {
                return ((bool)(this["RDbUseSameFolderPathsPlaylists"]));
            }
            set {
                this["RDbUseSameFolderPathsPlaylists"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Easy")]
        public string RDModeSelectSource {
            get {
                return ((string)(this["RDModeSelectSource"]));
            }
            set {
                this["RDModeSelectSource"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MirrorSyncAttributes {
            get {
                return ((bool)(this["MirrorSyncAttributes"]));
            }
            set {
                this["MirrorSyncAttributes"] = value;
            }
        }
    }
}
