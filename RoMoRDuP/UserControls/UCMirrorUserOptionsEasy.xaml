<UserControl x:Class="RoMoRDuP.UserControls.UCMirrorUserOptionsEasy"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:ValueConverters="clr-namespace:RoMoRDuP.ValueConverters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             
             
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600"
             x:Name="MirrorUserOptionsEasy"
             >

    <UserControl.Resources>
        <ValueConverters:RadioBoolMirrorEasyToEnumConverter x:Key="radioBoolToEnumConverter" />
        
       



        <!-- ///////////////// Button Style //////////////////-->


        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle 
            Margin="2"
            StrokeThickness="1"
            Stroke="#60000000"
            StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Fill Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />


        <Style TargetType="Button" x:Key="ButtonBorderStyle" >
            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="MinHeight" Value="23"/>
            <Setter Property="MinWidth" Value="75"/>
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="Button">

                        <Border 
                            Name="Border" CornerRadius="2" BorderThickness="5" BorderBrush="{StaticResource NormalBorderBrush}">

                            <ContentPresenter />
                            <!-- <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/> -->
                        </Border>

                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF4788c8" />
                            </Trigger>


                            <Trigger Property="Tag">
                                <Trigger.Value>
                                    <sys:Boolean>true</sys:Boolean>
                                </Trigger.Value>

                                <Setter TargetName="Border" Property="BorderBrush" Value="LawnGreen" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>

        <GroupBox Grid.Column="1" Header="MirrorUserOptions" Margin="5">
            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <RadioButton IsChecked="{Binding ElementName=MirrorUserOptionsEasy, Path=userOptionsMirror.OptionsMirrorEasy, Converter={StaticResource radioBoolToEnumConverter}, ConverterParameter=SyncOneWayLeave}" Margin="5" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center"/>
                <Border Grid.Column="1" Margin="10" BorderThickness="1" BorderBrush="Gray"> <!--Mirror One way-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Background="LightSkyBlue">
                            <Label Padding="1">Sync one-way - Keep additional</Label>
                        </Grid>

                        <Grid Grid.Row="1" Background="White">
                            <Button Click="Click_Button_SyncOneWayKeep" Style="{StaticResource ButtonBorderStyle}" Tag="{Binding ElementName=MirrorUserOptionsEasy, Path=userOptionsMirror.OptionsMirrorEasySyncOneWayKeep}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <Button.Content>
                                    <Grid Background="White">
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <ImageBrush ImageSource="..\Resources/Mirror_Easy_One.png" Stretch="Uniform"/>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Grid>
                </Border>

                <RadioButton IsChecked="{Binding ElementName=MirrorUserOptionsEasy, Path=userOptionsMirror.OptionsMirrorEasy, Converter={StaticResource radioBoolToEnumConverter}, ConverterParameter=SyncBothWays}" Margin="5" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center"/>
                <Border Grid.Column="1" Grid.Row="1" Margin="10" BorderThickness="1" BorderBrush="Gray"> <!--Mirror Both way-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Background="LightSkyBlue">
                            <Label Padding="1">Sync both-ways</Label>
                        </Grid>

                        <Grid Grid.Row="1" Background="White">
                            <Button Click="Click_Button_SyncBothWays" Style="{StaticResource ButtonBorderStyle}" Tag="{Binding ElementName=MirrorUserOptionsEasy, Path=userOptionsMirror.OptionsMirrorEasySyncBothWays}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <Button.Content>
                                    <Grid Background="White">
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <ImageBrush ImageSource="..\Resources/Mirror_Easy_Both.png" Stretch="Uniform"/>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Grid>
                </Border>

                <StackPanel Grid.Column="0" Grid.Row="2" VerticalAlignment="Center"> <!--Mirror Remove-->
                    <RadioButton IsChecked="{Binding ElementName=MirrorUserOptionsEasy, Path=userOptionsMirror.OptionsMirrorEasy, Converter={StaticResource radioBoolToEnumConverter}, ConverterParameter=SyncOneWayRemove}" Margin="5"/>
                    <Rectangle Margin="5" Width="19" Height="19" MouseUp="MouseUp" MouseLeave="MouseLeave">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="../Resources/Icon_Warning.png"/>
                        </Rectangle.Fill>
                        <Rectangle.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <Label FontWeight="Bold">Be careful and review the TaskView, this option can delete some of your files!</Label>
                                </StackPanel>
                            </ToolTip>
                        </Rectangle.ToolTip>
                    </Rectangle>
                </StackPanel>
                <Border Grid.Column="1" Grid.Row="2" Margin="10" BorderThickness="1" BorderBrush="Gray">
                    <!--Mirror Both way-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Background="LightSkyBlue">
                            <Label Padding="1">Sync one-way - remove additional</Label>
                        </Grid>

                        <Grid Grid.Row="1" Background="White">
                            <Button Click="Click_Button_SyncOneWayRA" Style="{StaticResource ButtonBorderStyle}" Tag="{Binding ElementName=MirrorUserOptionsEasy, Path=userOptionsMirror.OptionsMirrorEasySyncOneWayRemove}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <Button.Content>
                                    <Grid Background="White">
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <ImageBrush ImageSource="..\Resources/Mirror_Easy_Remove.png" Stretch="Uniform"/>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Grid>
                </Border>
                
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>

